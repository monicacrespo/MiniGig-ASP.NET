//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_Gig_TypeMusic", "MusicType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model.MusicType), "Gig", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.Gig), true)]

#endregion

namespace Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MiniGigEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MiniGigEntities object using the connection string found in the 'MiniGigEntities' section of the application configuration file.
        /// </summary>
        public MiniGigEntities() : base("name=MiniGigEntities", "MiniGigEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MiniGigEntities object.
        /// </summary>
        public MiniGigEntities(string connectionString) : base(connectionString, "MiniGigEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MiniGigEntities object.
        /// </summary>
        public MiniGigEntities(EntityConnection connection) : base(connection, "MiniGigEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gig> Gigs
        {
            get
            {
                if ((_Gigs == null))
                {
                    _Gigs = base.CreateObjectSet<Gig>("Gigs");
                }
                return _Gigs;
            }
        }
        private ObjectSet<Gig> _Gigs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MusicType> MusicTypes
        {
            get
            {
                if ((_MusicTypes == null))
                {
                    _MusicTypes = base.CreateObjectSet<MusicType>("MusicTypes");
                }
                return _MusicTypes;
            }
        }
        private ObjectSet<MusicType> _MusicTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Gigs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGigs(Gig gig)
        {
            base.AddObject("Gigs", gig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MusicTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMusicTypes(MusicType musicType)
        {
            base.AddObject("MusicTypes", musicType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Gig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gig object.
        /// </summary>
        /// <param name="gigId">Initial value of the gigId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="typeId">Initial value of the typeId property.</param>
        public static Gig CreateGig(global::System.Int32 gigId, global::System.String name, global::System.DateTime date, global::System.Byte typeId)
        {
            Gig gig = new Gig();
            gig.gigId = gigId;
            gig.name = name;
            gig.date = date;
            gig.typeId = typeId;
            return gig;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 gigId
        {
            get
            {
                return _gigId;
            }
            set
            {
                if (_gigId != value)
                {
                    OngigIdChanging(value);
                    ReportPropertyChanging("gigId");
                    _gigId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("gigId");
                    OngigIdChanged();
                }
            }
        }
        private global::System.Int32 _gigId;
        partial void OngigIdChanging(global::System.Int32 value);
        partial void OngigIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte typeId
        {
            get
            {
                return _typeId;
            }
            set
            {
                OntypeIdChanging(value);
                ReportPropertyChanging("typeId");
                _typeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("typeId");
                OntypeIdChanged();
            }
        }
        private global::System.Byte _typeId;
        partial void OntypeIdChanging(global::System.Byte value);
        partial void OntypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Gig_TypeMusic", "MusicType")]
        public MusicType MusicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MusicType>("Model.FK_Gig_TypeMusic", "MusicType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MusicType>("Model.FK_Gig_TypeMusic", "MusicType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MusicType> MusicTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MusicType>("Model.FK_Gig_TypeMusic", "MusicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MusicType>("Model.FK_Gig_TypeMusic", "MusicType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MusicType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MusicType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MusicType object.
        /// </summary>
        /// <param name="typeId">Initial value of the typeId property.</param>
        /// <param name="description">Initial value of the description property.</param>
        public static MusicType CreateMusicType(global::System.Byte typeId, global::System.String description)
        {
            MusicType musicType = new MusicType();
            musicType.typeId = typeId;
            musicType.description = description;
            return musicType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte typeId
        {
            get
            {
                return _typeId;
            }
            set
            {
                if (_typeId != value)
                {
                    OntypeIdChanging(value);
                    ReportPropertyChanging("typeId");
                    _typeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("typeId");
                    OntypeIdChanged();
                }
            }
        }
        private global::System.Byte _typeId;
        partial void OntypeIdChanging(global::System.Byte value);
        partial void OntypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Gig_TypeMusic", "Gig")]
        public EntityCollection<Gig> Gigs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Gig>("Model.FK_Gig_TypeMusic", "Gig");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Gig>("Model.FK_Gig_TypeMusic", "Gig", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
